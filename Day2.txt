https://www.devopsschool.com/tutorial/docker/commands/index.html
13.233.86.246

https://www.devopsschool.com/tutorial/docker/commands/index.html

CP

 191  touch devopsschool.txt
  192  ls
  193  docker ps
  194  docker run -itd ubuntu /bin/bash
  195  docker ps
  196  ls
  197  docker exec 323ada7ba91f ls /opt
  198  docker cp devopsschool.txt 323ada7ba91f:/opt
  199  docker exec 323ada7ba91f ls /opt
  200  ls
  201  clear
  202  ls
  203  rm -rf devopsschool.txt
  204  ls
  205  docker cp 323ada7ba91f:/opt/devopsschool.txt .
  206  ls

diff
	Once a container get created - after that any files/dir
	- ADDED
	- CHANGED
	- DELETED...
	you get info using this command.

 208  clear
  209  docker ps
  210  docker attach 323ada7ba91f
  211  docker ps
  212  clear
  213  docker ps -a
  214  docker diff 323ada7ba91f
  215  docker start 323ada7ba91f
  216  docker diff 323ada7ba91f
  217  history

================================
What kind of AUTH we have to access a DOCKER Container.
================================
DOCKER NEEDs ROOT to run docker commands.
ROOT can access every thing menas every user.
COntainer is a process for the HOST machine
- 
Do a root need access to a process(user) to get inside?
===================================================
port

  234  docker ps
  235  ps -eaf | grep docker
  236  clear
  237  docker run -d -p 8080:8080 jenkins
  238  docker ps
  239  docker port 53bdbb763fad
  240  docker port 8b2a948a9c91


rename

 243  docker ps
  244  docker run -itd --name dev1 ubuntu
  245  docker ps
  246  docker help run
  247  clear
  248  ls
  249  docker ps
  250  docker rename 323ada7ba91f dev2
  251  docker rename affectionate_galileo dev3
  252  docker ps
  253  docker start dev1 dev2 dev3
  254  docker ps
  255  docker stop dev1 dev2 dev3
  256  docker ps
  257  docker start dev1 dev2 dev3
  258  docker ps
  259  history


Assignment
=============================
update	Update configuration of one or more containers
wait	Block until one or more containers stop, then print their exit codes
=============================

logs

	Fetch the logs of a container AKA LOGS of PID1

 189  docker ps
  190  docker logs ff7f0543fd00
  191  watch docker logs ff7f0543fd00
  192  docker logs ff7f0543fd00
  193  docker los
  194  docker logs
  195  docker ps
  196  docker logs 8b2a948a9c91
  197  docker logs 8b2a948a9c91
  198  watch docker logs 8b2a948a9c91
  199  history


stats
 201  docker stats
  202  docker stats ff7f0543fd00
  203  docker ps
  204  docker stats
  205  docker ps
  206  docker pause 53bdbb763fad
  207  docker ps
  208  clear
  209  docker pause 53bdbb763fad
  210  docker stats
  211  history



top
212  clear
  213  docker ps
  214* ps -eaf | grep docke
  215  clear
  216  docker ps
  217  ps -eaf | grep /bin/tini
  218  ps -eaf | grep /bin/bash
  219  docker top ff7f0543fd00


events

 221  clear
  222  docker events
  223  docker events
  224  hisory
  225  history


====================================================
Docker Volume
============================================
Containers are EMP*
-----------------------
Data in the Container are also EMP*
------------------------------
BUT we need DATA persistency....BEYOND Containers Lifecycle.

https://www.devopsschool.com/blog/understand-docker-volume-from-beginner-to-deep-dive-level/

Volume - Types
- volume	/var/lib/docker/volumes 
- mntfs		ANY PLACE IN THE HOST MACHINE
- tempfs	Memory


 232  ls
  233  docker volume
  234  clear
  235  ls
  236  docker volume ls
  237  docker volume prune
  238  clear
  239  ls
  240  docker volume ls
  241  docker volume create dev1
  242  ls
  243  docker volume create dev2
  244  ls
  245  docker volume create dev3
  246  docker volume rm dev3
  247  ls
  248  docker volume inspect dev3
  249  docker volume inspect dev2
  250  docker volume
  251  ls
  252  docker run -itd -v dev1:/tmp ubuntu
  253  docker ps
  254  clear
  255  docker ps
  256  docker exec 55f7d4335d83 df -kh
  257  docker run -itd -v dev1:/tmp/raju ubuntu
  258  docker p
  259  docker ps
  260  clear
  261  docker ps
  262  docker exec d4dd948bb00a df -kh
  263  docker exec d4dd948bb00a touch //tmp/raju/kaka.txt
  264  docker ps
  265  docker exec d4dd948bb00a ls /tmp
  266  docker exec d4dd948bb00a ls /tmp/raju
  267  docker exec 55f7d4335d83 /tmp
  268  docker exec 55f7d4335d83 ls /tmp
  269  ls
  270  cd dev1
  271  ls
  272  cd _data/
  273  ls
  274  touch fdsfsf
  275  ls
  276  docker exec 55f7d4335d83 ls /tmp
  277  cd ..
  278  ls
  279  clear
  280  cd ..
  281  ls
  282  docker ps -a
  283  docker stop d4dd948bb00a 55f7d4335d83
  284  docker rm d4dd948bb00a 55f7d4335d83
  285  ls
  286  cd dev1/
  287  ls
  288  cd _data/
  289  ls
  290  docker run -itd -v dev1:/opt/raju1 -v dev2:/opt/raju2 ubuntu
  291  docker ps
  292  docker exec 2dee3c3a993e ls /
  293  docker exec 2dee3c3a993e ls /opt
  294  docker exec 2dee3c3a993e ls /opt/raju1
  295  clear
  296  ls
  297  cd ..
  298  clear
  299  ls
  300  cd ..
  301  ls
  302  cd ..
  303  ls
  304  pwd
  305  cd /opt/
  306  ls
  307  pwd
  308  mkdkir backup
  309  mkdir backup
  310  ls
  311  cd backup/
  312  clear
  313  pwd
  314  docke run -itd -v /opt/backup:/opt/ramu ubuntu
  315  docker run -itd -v /opt/backup:/opt/ramu ubuntu
  316  docker ps
  317  docker exec e653f5587a0c /opt
  318  docker exec e653f5587a0c ls /opt
  319  touch sdffs
  320  docker exec e653f5587a0c ls /opt/ramu














A






