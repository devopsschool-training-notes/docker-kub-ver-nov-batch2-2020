13.232.215.161
centos
centos123

How a workstation connect to API server?
=============================================
kubectl
	read a file of config
	$USER_HOME/.kube/config


	What is the content of config?
	YAML
	
	Clustor(s):
		- Clustor1: http://api-server1
		- Clustor2: http://api-server2
		- Clustor3: http://api-server3
	User(s):
		- User1: cert and key
		- User2: cert and key
		- User3: cert and key
	Context(S)	
		- Context1: Clustor1 + User1
		- Context2: Clustor2 + User3
		- Context3: Clustor3 + User2
	curr-context
		Context2'
\
13.232.215.161

===============================================================================
What is your DESIRE?
====================================

[centos@ip-172-31-2-78 ~]$ kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create        Create a resource from a file or from stdin.
  expose        Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run           Run a particular image on the cluster
  set           Set specific features on objects

Basic Commands (Intermediate):
  explain       Documentation of resources
  get           Display one or many resources
  edit          Edit a resource on the server
  delete        Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout       Manage the rollout of a resource
  scale         Set a new size for a Deployment, ReplicaSet or Replication Controller
  autoscale     Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate   Modify certificate resources.
  cluster-info  Display cluster info
  top           Display Resource (CPU/Memory/Storage) usage.
  cordon        Mark node as unschedulable
  uncordon      Mark node as schedulable
  drain         Drain node in preparation for maintenance
  taint         Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  proxy         Run a proxy to the Kubernetes API server
  cp            Copy files and directories to and from containers.
  auth          Inspect authorization

Advanced Commands:
  diff          Diff live version against would-be applied version
  apply         Apply a configuration to a resource by filename or stdin
  patch         Update field(s) of a resource using strategic merge patch
  replace       Replace a resource by filename or stdin
  wait          Experimental: Wait for a specific condition on one or many resources.
  convert       Convert config files between different API versions
  kustomize     Build a kustomization target from a directory or a remote url.

Settings Commands:
  label         Update the labels on a resource
  annotate      Update the annotations on a resource
  completion    Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  alpha         Commands for features in alpha
  api-resources Print the supported API resources on the server
  api-versions  Print the supported API versions on the server, in the form of "group/version"
  config        Modify kubeconfig files
  plugin        Provides utilities for interacting with plugins.
  version       Print the client and server version information

Usage:
  kubectl [flags] [options]

[centos@ip-172-31-2-78 ~]$ kubectl api-resources
NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND
bindings                                                                      true         Binding
componentstatuses                 cs                                          false        ComponentStatus
configmaps                        cm                                          true         ConfigMap
endpoints                         ep                                          true         Endpoints
events                            ev                                          true         Event
limitranges                       limits                                      true         LimitRange
namespaces                        ns                                          false        Namespace
nodes                             no                                          false        Node
persistentvolumeclaims            pvc                                         true         PersistentVolumeClaim
persistentvolumes                 pv                                          false        PersistentVolume
pods                              po                                          true         Pod
podtemplates                                                                  true         PodTemplate
replicationcontrollers            rc                                          true         ReplicationController
resourcequotas                    quota                                       true         ResourceQuota
secrets                                                                       true         Secret
serviceaccounts                   sa                                          true         ServiceAccount
services                          svc                                         true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io   false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io   false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io           false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io         false        APIService
controllerrevisions                            apps                           true         ControllerRevision
daemonsets                        ds           apps                           true         DaemonSet
deployments                       deploy       apps                           true         Deployment
replicasets                       rs           apps                           true         ReplicaSet
statefulsets                      sts          apps                           true         StatefulSet
tokenreviews                                   authentication.k8s.io          false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io           true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io           false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io           false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io           false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling                    true         HorizontalPodAutoscaler
cronjobs                          cj           batch                          true         CronJob
jobs                                           batch                          true         Job
certificatesigningrequests        csr          certificates.k8s.io            false        CertificateSigningRequest
leases                                         coordination.k8s.io            true         Lease
endpointslices                                 discovery.k8s.io               true         EndpointSlice
events                            ev           events.k8s.io                  true         Event
ingresses                         ing          extensions                     true         Ingress
ingressclasses                                 networking.k8s.io              false        IngressClass
ingresses                         ing          networking.k8s.io              true         Ingress
networkpolicies                   netpol       networking.k8s.io              true         NetworkPolicy
runtimeclasses                                 node.k8s.io                    false        RuntimeClass
poddisruptionbudgets              pdb          policy                         true         PodDisruptionBudget
podsecuritypolicies               psp          policy                         false        PodSecurityPolicy
clusterrolebindings                            rbac.authorization.k8s.io      false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io      false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io      true         RoleBinding
roles                                          rbac.authorization.k8s.io      true         Role
priorityclasses                   pc           scheduling.k8s.io              false        PriorityClass
csidrivers                                     storage.k8s.io                 false        CSIDriver
csinodes                                       storage.k8s.io                 false        CSINode
storageclasses                    sc           storage.k8s.io                 false        StorageClass
volumeattachments                              storage.k8s.io                 false        VolumeAttachment

What do you want?
=====================================
Namespace
POD
RC
Deployment
Services
Auth
Auth
Vol

What is Namespace?
======================
Working with Namespace?
============================================
What can you do with API?
CRUD
	CREATE
		CMD	
			create
		YAML
			create -f
	READ
		CMD
			get
			describe
		YAML

	UPDATE
		CMD
			edit
		YAML
			apply
	DELETE	
		CMD
			delete
		YAML
			delete -f 

 21  more $HOME/.kube/config
   22  clear
   23  kubectl
   24  kubectl api-resources
   25  clear
   26  kubectl
   27  clear
   28  kubectl api-resources
   29  kubectl api-resources | wc -l
   30  cleatr
   31  clear
   32  kubectl
   33  kubectl api-versions
   34  clear
   35  kubectl api-resources
   36  clear
   37  kubectl
   38  clear
   39  kubectl get ns
   40  kubectl desribe ns kube-public
   41  kubectl describe ns kube-public
   42  clear
   43  ls
   44  kubectl get ns
   45  kubectl create[centos@ip-172-31-2-78 ~]$ kubectl create
   46  kubectl -h
   47  kubectl create -h
   48  clear
   49  kubectl create -h
   50  clear
   51  kubectl create namespace -h
   52  clear
   53  kubectl create namespace dev
   54  kubectl create namespace qa
   55  kubectl create ns raju
   56  kubectl get ns
   57  kubectl edit ns dev
   58  kubectl delete ns raju
   59  kubectl get ns
   60  kubectl delete ns dev qa
   61  kubectl create ns rajesh
============================================================
============================================================
pod.yaml
-------------------
apiVersion: v1
kind: Pod
metadata:
  name: hello-pod
  labels: 
    app: webserver
spec:
  containers:
  - name: hello-ctr
    image: nginx
    ports:
    - containerPort: 80


  83  ls
   84  pwd
   85  vi pod.yaml
   86  kubectl create -f pod.yaml
   87  kubectl get pods
   88  kubectl get pods -n=rajesh
   89  kubectl create -f pod.yaml
   90  kubectl create -f pod.yaml -n=rajesh
   91  kubectl get pods -n=rajesh
   92  kubectl get pods
   93  clear
   94  kubectl get pods --all-namespaces
   95  kubectl get pods --all-namespaces -o wide
   96  clear
   97  ls
   98  kubectl get pods
   99  kubectl get pods -n=rajesh
  100  kubectl describe pod hello-pod
  101  clear
  102  ls
  103  kubectl get pods -n=rajesh
  104  kubectl get pods -n=rajesh --show-labels
  105  kubectl edit pods hello-pod -n=rajesh
  106  kubectl get pods -n=rajesh --show-labels
  107  kubectl get pods
  108  kubectl delete pod hello-pod
  109  kubectl delete -f pod.yaml
  110  kubectl delete -f pod.yaml -n=rajesh
  111  history
====================================================================
How to Use pods?
=========================

  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  cp            Copy files and directories to and from containers.
  auth          Inspect authorization



 121  kubectl get pods -n=rajesh
  122  ls
  123  kubectl create -f -n=rajesh
  124  kubectl create -f pod.yaml -n=rajesh
  125  kubectl get pods -n=rajesh
  126  kubectl logs hello-pod -n=rajesh
  127  clear
  128  kubectl logs hello-pod -n=rajesh
  129  watch kubectl logs hello-pod -n=rajesh

 19  kubectl get pods -o wide -n=rajesh
   20  curl http://10.44.0.1
   21  clear
   22  watch curl http://10.44.0.1
   23  history



   26  kubectl get pods -o wide -n=rajesh
   27  kubectl attach hello-pod
   28  kubectl attach hello-pod -n=rajesh

watch curl http://10.44.0.1


 133  kubectl get pods -n=rajesh
  134  kubectl exec hello-pod ls -n=rajesh
  135  kubectl exec hello-pod df -kh -n=rajesh
  136  kubectl exec hello-pod df  -n=rajesh
  137  kubectl exec hello-pod dfdd  -n=rajesh
  138  clear
  139  kubectl exec -it hello-pod /bin/bash  -n=rajesh


kubectl port-forward pod/hello-pod 8888:80

kubectl port-forward --address 0.0.0.0 pod/hello-pod 8888:80


 143  kubectl get pods -n=rajesh -o wide
  144  ping 10.44.0.1
  145  curl http://10.44.0.1
  146  clear
  147  ls
  148  kubectl port-forward -h
  149  clear
  150  kubectl get pods -n=rajesh -o wide
  151  clear
  152  kubectl port-forward pod/hello-pod 8888:80
  153  kubectl port-forward pod/hello-pod 8888:80 -n=rajesh
  156  kubectl port-forward -h
  157  clear
  158  kubectl port-forward --address 0.0.0.0 pod/hello-pod 8888:80
  159  kubectl port-forward --address 0.0.0.0 pod/hello-pod 8888:80 -n=rajesh
  160  history

 166  kubectl cp pod.yaml hello-pod:/tmp -n=rajesh
  167  kubectl exec hello-pod ls /tmp -n=rajesh
  168  kubectl cp -
  169  kubectl cp -h


 170  history
  171  clear
  172  kubectl auth -h
  173  kubectl auth can-i create pods
  174  kubectl auth can-i delete pods
  175  kubectl auth can-i edit pods
  176  kubectl auth can-i get  pods
  177  kubectl auth can-i -h
  178  history
==========================================================
========================================================
RC = ReplicationController

Replication - Replicate Many PODS.
Controller == Your desired PODS would be controlled with Actual.

apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-rc
spec:
  replicas: 2   
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-ctr
        image: scmgalaxy/nginx-devopsschoolv1
        ports:
        - containerPort: 80



 180  kubectl create -h
  181  clear
  182  ls
  183  vi rc.yaml
  184  kubectl create -f rc.yaml -n=rajesh
  185  kubectl ge rc
  186  kubectl get rc
  187  kubectl get rc -n=rajesh
  188  kubectl describe rc hello-rc -n=rajesh
  189  clear
  190  ls
  191  kubectl get pods -n=rajesh
  192  kubectl describe pod hello-rc-74gcn -n=rajesh
  193  clear
  194  kubectl get pods -n=rajesh
  195  kubectl describe pod hello-pod -n=rajesh
  196  clwar
  197  clear
  198  ls
  199  kubectl get rc -n=rajesh
  200  kubectl edit rc hello-rc -n=rajesh
  201  kubectl get pods -n=rajesh
  202  vi rc.yaml
  203  kubectl apply -f rc -n=rajesh
  204  kubectl apply -f rc.yaml -n=rajesh
  205  kubectl get pods -n=rajesh
  206  clear
  207  kubectl scale -h
  208  clear
  209  kubectl get rc -n=rajesh
  210  kubectl scale --replicas=6 rc/hello-rc -n=rajesh
  211  kubectl get rc -n=rajesh
  212  clear
  213  ls
  214  kubectl get pods -n=rajesh
  215  kubectl delete pods hello-rc-576f8 hello-rc-74gcn hello-rc-kmnlp hello-rc-lg5pj -n=rajesh
  216  kubectl get pods -n=rajesh
  217  kubectl delete pods hello-pod -n=rajesh
  218  kubectl get pods -n=rajesh
  219  history

+=========================================================

  178  ls
  179  kubectl explain ns
  180  clear
  181  kubectl explain ns.spec
  182  kubectl explain pods
  183  clear
  184  kubectl explain pods.spec
  185  clear
  186  kubectl explain pods.spec.containers
  187  clear
  188  kubectl explain pods.spec.containers.volumeMounts
  189  clear
  190  ls
  191  kubectl explain rc
  192  kubectl explain rc.spec
  193  kubectl explain rc.spec.template
  194  kubectl explain rc.spec.template.spec
  195  kubectl explain deploy
  196  kubectl explain deploy.spec
  197  kubectl explain deploy.spec.template
  198  kubectl explain deploy.spec.template.spec
  199  kubectl explain deploy.spec.template.spec.containers
  200  history



+=========================================================
Deployment
================================
Replication
Controller

Versioning
Rollout
Rollback

kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh

kubectl scale --replicas=10 deploy/my-dep -n=rajesh

  125  kubectl create -h
  126  kubectl create deployment -h
  127  clear
  128  kubectl get nodes
  129  kubectl get pods --all-namespaces
  130  kubectl get pods --all-namespaces | wc -l
  131  kubectl delete ns thameem
  132  kubectl get nodes
  133  watch kubectl get nodes
  134  clear
  135  watch kubectl get nodes
  136  watch kubectl get pods
  137  kubectl get pods --all-namespaces
  138  clear
  139  kubectl get pods --all-namespaces | wc -l
  140  kubectl get nodes
  141  kubectl taint node ip-172-31-2-78.ap-south-1.compute.internal node-role.kubernetes.io/master:NoSchedule-
  142  clear
  143  ls
  144  kubectl get nodes
  145  history
  146  clear
  147  kubectl create deployment -h
  148  clear
  149  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  150  kubectl get deploy -n=rajesh
  151  kubectl get pods -n=rajesh
  152  clear
  153  ls
  154  kubectl get pods -n=rajesh
  155  kubectl get deploy -n=rajesh
  156  kubectl describe deploy my-dep -n=rajesh
  157  clear
  158  kubectl get deploy -n=rajesh
  159  kubectl edit deploy my-dep -n=rajesh
  160  kubectl get deploy -n=rajesh
  161  clear
  162  ls
  163  kubectl get pods -n=rajesh
  164  kubectl get pods -n=rajesh -o wide
  165  kubectl get nodes
  166  clear
  167  kubectl get ns
  168  clear
  169  ls
  170  kubectl scale -h
  171  clear
  172  kubectl get deploy -n=rajesh
  173  kubectl scale --replicas=10 deploy/my-dep -n=rajesh
  174  kubectl get deploy -n=rajesh
  175  watch kubectl get deploy -n=rajesh
  176  lear
  177  clear
  178  ls
  179  kubectl explain ns
  180  clear
  181  kubectl explain ns.spec
  182  kubectl explain pods
  183  clear
  184  kubectl explain pods.spec
  185  clear
  186  kubectl explain pods.spec.containers
  187  clear
  188  kubectl explain pods.spec.containers.volumeMounts
  189  clear
 202  kubectl get deploy -n=rajesh
  203  kubectl get deploy my-dep -n=rajesh
  204  kubectl get deploy my-dep -n=rajesh -o json
  205  kubectl get deploy my-dep -n=rajesh -o yaml
  206  clear
  207  kubectl get deploy my-dep -n=rajesh -o yaml
  208  clear
  209  kubectl get deploy my-dep -n=rajesh -o yaml >> mydep.yaml
  210  ls
  211  more mydep.yaml
  212  vi mydep.yaml
  213  clear
  214  ls
  215  kubectl apply -f mydep.yaml -n=rajesh
  216  kubectl get deploy my-dep -n=rajesh -o yaml
  217  clear
  218  kubectl get deploy -n=rajesh
  219  kubectl get pods -n=rajesh
  220  kubectl delete pod my-dep-747b4ffb56-47qm2 my-dep-747b4ffb56-4hrdg my-dep-747b4ffb56-5r5fq my-dep-747b4ffb56-7dxw4 my-dep-747b4ffb56-9bkt8 my-dep-747b4ffb56-fg4kd my-dep-747b4ffb56-fld7q my-dep-747b4ffb56-j77dn
  221  kubectl delete pod my-dep-747b4ffb56-47qm2 my-dep-747b4ffb56-4hrdg my-dep-747b4ffb56-5r5fq my-dep-747b4ffb56-7dxw4 my-dep-747b4ffb56-9bkt8 my-dep-747b4ffb56-fg4kd my-dep-747b4ffb56-fld7q my-dep-747b4ffb56-j77dn -n=rajesh
  222  kubectl get pods -n=rajesh
  223  clear
  224  kubectl get deploy -n=rajesh
  225  kubectl delete deploy my-dep -n=rajesh
  226  ls
  227  kubectl delete -f mydep.yaml -n=rajesh


kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh

kubectl rollout status deploy/my-dep -n=rajesh 


  134  kubectl get deploy -n=rajesh
  135  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  136  kubectl get deploy -n=rajesh
  137  kubectl rollout history deploy my-dep -n=rajesh
  138  kubectl get pods -n=rajesh -o wide
  139  curl http://10.44.0.1
  140  kubectl edit deploy my-dep -n=rajesh
  141  kubectl get pods -n=rajesh -o wide
  142  curl http://10.44.0.2
  143  kubectl rollout history deploy my-dep -n=rajesh
  144  clear
  145  kubectl get pods -n=rajesh -o wide
  146  kubectl delete deploy my-dep -n=rajesh
  147  kubectl create deployment my-dep --image=scmgalaxy/nginx-devopsschoolv1 -n=rajesh
  148  kubectl get deploy =n=rajesh
  149  kubectl get deploy -n=rajesh
  150  kubectl edit deploy my-dep -n=rajesh
  151  kubectl rollout status deploy/my-dep1 -n=rajesh
  152  kubectl rollout status deploy/my-dep -n=rajesh
  153  history
  154  kubectl rollout history deploy my-dep -n=rajesh
  155  kubectl get deploy -n=rajesh
  156  kubectl get pods -n=rajesh -o wide
  157  curl http://10.32.0.28
  158  kubectl rollout undo deploy/my-dep --to-revision=1 -n=rajesh
  159  kubectl rollout status deploy/my-dep -n=rajesh
  160  kubectl get pods -n=rajesh -o wide
  161  curl http://10.44.0.15
